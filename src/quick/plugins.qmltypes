import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable org.kde.purpose 1.0 /home/apol/devel/kde5/lib64/qml -output /home/apol/devel/frameworks/purpose/src/quick/plugins.qmltypes'

Module {
    dependencies: []
    Component {
        name: "KJob"
        prototype: "QObject"
        Enum {
            name: "Unit"
            values: {
                "Bytes": 0,
                "Files": 1,
                "Directories": 2
            }
        }
        Enum {
            name: "Capability"
            values: {
                "NoCapabilities": 0,
                "Killable": 1,
                "Suspendable": 2
            }
        }
        Enum {
            name: "Capabilities"
            values: {
                "NoCapabilities": 0,
                "Killable": 1,
                "Suspendable": 2
            }
        }
        Enum {
            name: "KillVerbosity"
            values: {
                "Quietly": 0,
                "EmitResult": 1
            }
        }
        Property { name: "error"; type: "int"; isReadonly: true }
        Property { name: "errorText"; type: "string"; isReadonly: true }
        Property { name: "errorString"; type: "string"; isReadonly: true }
        Property { name: "percent"; type: "ulong"; isReadonly: true }
        Property { name: "capabilities"; type: "Capabilities"; isReadonly: true }
        Signal {
            name: "finished"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
        }
        Signal {
            name: "suspended"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
        }
        Signal {
            name: "resumed"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
        }
        Signal {
            name: "result"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
        }
        Signal {
            name: "description"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
            Parameter { name: "title"; type: "string" }
            Parameter { name: "field1"; type: "QPair<QString,QString>" }
            Parameter { name: "field2"; type: "QPair<QString,QString>" }
        }
        Signal {
            name: "description"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
            Parameter { name: "title"; type: "string" }
            Parameter { name: "field1"; type: "QPair<QString,QString>" }
        }
        Signal {
            name: "description"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
            Parameter { name: "title"; type: "string" }
        }
        Signal {
            name: "infoMessage"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
            Parameter { name: "plain"; type: "string" }
            Parameter { name: "rich"; type: "string" }
        }
        Signal {
            name: "infoMessage"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
            Parameter { name: "plain"; type: "string" }
        }
        Signal {
            name: "warning"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
            Parameter { name: "plain"; type: "string" }
            Parameter { name: "rich"; type: "string" }
        }
        Signal {
            name: "warning"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
            Parameter { name: "plain"; type: "string" }
        }
        Signal {
            name: "totalAmount"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
            Parameter { name: "unit"; type: "KJob::Unit" }
            Parameter { name: "amount"; type: "qulonglong" }
        }
        Signal {
            name: "processedAmount"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
            Parameter { name: "unit"; type: "KJob::Unit" }
            Parameter { name: "amount"; type: "qulonglong" }
        }
        Signal {
            name: "totalSize"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
            Parameter { name: "size"; type: "qulonglong" }
        }
        Signal {
            name: "processedSize"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
            Parameter { name: "size"; type: "qulonglong" }
        }
        Signal {
            name: "percent"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
            Parameter { name: "percent"; type: "ulong" }
        }
        Signal {
            name: "speed"
            Parameter { name: "job"; type: "KJob"; isPointer: true }
            Parameter { name: "speed"; type: "ulong" }
        }
        Method {
            name: "kill"
            type: "bool"
            Parameter { name: "verbosity"; type: "KillVerbosity" }
        }
        Method { name: "kill"; type: "bool" }
        Method { name: "suspend"; type: "bool" }
        Method { name: "resume"; type: "bool" }
        Method { name: "start" }
        Method {
            name: "processedAmount"
            type: "qulonglong"
            Parameter { name: "unit"; type: "Unit" }
        }
        Method {
            name: "totalAmount"
            type: "qulonglong"
            Parameter { name: "unit"; type: "Unit" }
        }
    }
    Component {
        name: "Purpose::AlternativesModel"
        prototype: "QAbstractListModel"
        exports: ["org.kde.purpose/PurposeAlternativesModel 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "pluginType"; type: "string" }
        Property { name: "inputData"; type: "QJsonObject" }
        Method {
            name: "configureJob"
            type: "Purpose::Configuration*"
            Parameter { name: "row"; type: "int" }
        }
    }
    Component {
        name: "Purpose::Configuration"
        prototype: "QObject"
        exports: ["org.kde.purpose/PurposeConfiguration 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "isReady"; type: "bool"; isReadonly: true }
        Property { name: "data"; type: "QJsonObject" }
        Property { name: "neededArguments"; type: "QJsonArray"; isReadonly: true }
        Property { name: "configSourceCode"; type: "QUrl"; isReadonly: true }
        Method { name: "createJob"; type: "Purpose::Job*" }
    }
    Component {
        name: "Purpose::Job"
        prototype: "KJob"
        exports: ["org.kde.purpose/PurposeJob 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "data"; type: "QJsonObject"; isReadonly: true }
        Property { name: "output"; type: "QJsonObject" }
        Signal {
            name: "outputChanged"
            Parameter { name: "output"; type: "QJsonObject" }
        }
    }
    Component {
        name: "QAbstractItemModel"
        prototype: "QObject"
        Enum {
            name: "LayoutChangeHint"
            values: {
                "NoLayoutChangeHint": 0,
                "VerticalSortHint": 1,
                "HorizontalSortHint": 2
            }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
            Parameter { name: "roles"; type: "QVector<int>" }
        }
        Signal {
            name: "dataChanged"
            Parameter { name: "topLeft"; type: "QModelIndex" }
            Parameter { name: "bottomRight"; type: "QModelIndex" }
        }
        Signal {
            name: "headerDataChanged"
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutChanged" }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
            Parameter { name: "hint"; type: "QAbstractItemModel::LayoutChangeHint" }
        }
        Signal {
            name: "layoutAboutToBeChanged"
            Parameter { name: "parents"; type: "QList<QPersistentModelIndex>" }
        }
        Signal { name: "layoutAboutToBeChanged" }
        Signal {
            name: "rowsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "rowsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsInserted"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal {
            name: "columnsRemoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "first"; type: "int" }
            Parameter { name: "last"; type: "int" }
        }
        Signal { name: "modelAboutToBeReset" }
        Signal { name: "modelReset" }
        Signal {
            name: "rowsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationRow"; type: "int" }
        }
        Signal {
            name: "rowsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "row"; type: "int" }
        }
        Signal {
            name: "columnsAboutToBeMoved"
            Parameter { name: "sourceParent"; type: "QModelIndex" }
            Parameter { name: "sourceStart"; type: "int" }
            Parameter { name: "sourceEnd"; type: "int" }
            Parameter { name: "destinationParent"; type: "QModelIndex" }
            Parameter { name: "destinationColumn"; type: "int" }
        }
        Signal {
            name: "columnsMoved"
            Parameter { name: "parent"; type: "QModelIndex" }
            Parameter { name: "start"; type: "int" }
            Parameter { name: "end"; type: "int" }
            Parameter { name: "destination"; type: "QModelIndex" }
            Parameter { name: "column"; type: "int" }
        }
        Method { name: "submit"; type: "bool" }
        Method { name: "revert" }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "hasIndex"
            type: "bool"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "index"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
        }
        Method {
            name: "parent"
            type: "QModelIndex"
            Parameter { name: "child"; type: "QModelIndex" }
        }
        Method {
            name: "sibling"
            type: "QModelIndex"
            Parameter { name: "row"; type: "int" }
            Parameter { name: "column"; type: "int" }
            Parameter { name: "idx"; type: "QModelIndex" }
        }
        Method {
            name: "rowCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "rowCount"; type: "int" }
        Method {
            name: "columnCount"
            type: "int"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "columnCount"; type: "int" }
        Method {
            name: "hasChildren"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method { name: "hasChildren"; type: "bool" }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "data"
            type: "QVariant"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "setData"
            type: "bool"
            Parameter { name: "index"; type: "QModelIndex" }
            Parameter { name: "value"; type: "QVariant" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
            Parameter { name: "role"; type: "int" }
        }
        Method {
            name: "headerData"
            type: "QVariant"
            Parameter { name: "section"; type: "int" }
            Parameter { name: "orientation"; type: "Qt::Orientation" }
        }
        Method {
            name: "fetchMore"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "canFetchMore"
            type: "bool"
            Parameter { name: "parent"; type: "QModelIndex" }
        }
        Method {
            name: "flags"
            type: "Qt::ItemFlags"
            Parameter { name: "index"; type: "QModelIndex" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
            Parameter { name: "flags"; type: "Qt::MatchFlags" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
            Parameter { name: "hits"; type: "int" }
        }
        Method {
            name: "match"
            type: "QModelIndexList"
            Parameter { name: "start"; type: "QModelIndex" }
            Parameter { name: "role"; type: "int" }
            Parameter { name: "value"; type: "QVariant" }
        }
    }
    Component { name: "QAbstractListModel"; prototype: "QAbstractItemModel" }
}
